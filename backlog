Show a static page at /slide/*
Show a Slide at /slide/<name>, fully unrolled
Create a Slide from an indented text file
Allow CSS at /slide/<name>?css=<url> (just pass into HTML)
Highlight any Slide at /slide/<name>?focus=<name>
Click on a Slide to open it as HTML, fully unrolled
Where a Slide name begins [<id>], allow [<id>] only wherever full <name> expected.
    - Also allow autogenerated ids in the form [2]. 
Include Slide IDs as inlines but don't display by default (CSS)
'Smart' unrolling
    - unrolls whole generations, until unrolling again would break the limit
Line count limit at /slide/<name>?lines=8. Error if will not fit in limit.
Next link
    - Stay on same page/slide, focus traverses tree
Prev link as next
In link for ununrolled slides
Keyboard shortcuts:
    - left arrow = prev
    - down arrow = in
    - right arrow = next
    - space = in otherwise next
Keyboard shortcuts:
    - up arrow = out
    - space = in otherwise next otherwise out
Remove full names from URL, short names/id only (was a silly idea)
Trace of parent pages on "in" link (note focus should auto-next)
Trace of parent pages on clickable links (no need for auto-next)
Out link
Visual (CSS) cue to whether a slide has content
<<< 1.0
Export Slide as JSON
Investigate deck.js (https://github.com/imakewebthings/deck.js)
Make HTML output use deck.js
Make IDs actual numbers in JSON representation (saves a few bytes)
Allow custom separators per json module (saves a few bytes)
Client side navigation - build a Slide from hardcoded JSON
Client side navigation - click on a Slide to open it (everything fully unrolled, no asynch comms)
Client side navigation - next/prev - comes free with deck.js
replace deck.js with dzslides
Client side navigation - in (still no asynch comms)
Client side navigation - out
fix hash-ids to be real ids
fix progress bar to recalculate on in/out
Client side navigation - fetch Slide contents from server asynchronously if not available
Rich content - text:
Rich content - ul:
Rich content - ol:
Rich content - p:
Rich content - image:
Rich content - background-image:
Rich content - style:
Rich content - transition:
Rich content - subtitle:
<<< 2.0
Split name and style into distinct fields
Rich content - codeblock:
Rich content - background-codeblock:
Rich content - ul-incremental:
Rich content - ol-incremental:
Flash card view (show title only, then children) - p-incremental:
Rich content - bubbles:
Rich content - boxes:
Working internal links (inc. unroll as necessary)
Rich content - add class name to all sections of that class
On init, move to front page (so links with hash aren't actually broken---arguably useful too, since know the available scope)
Get full client page from server at /presentation/<id> -- no content
Get client page from server at /presentation/<id>?unroll= including preloaded subtree of chosen slide to desired unroll level
Allow "up" from root where parent id known (fetches new root from server, don't do it in js)
Auto-"up" if child entry specified in URL (which would not yield a slide)
Minify script with cssmin, rjsmin
Refactor content types into plugins
Server produces client page w/required plugins, CSS, etc.
Fix CSS inheritance (currently hacked in text.type.css) -- by using JS inheritance to inject full class ancestry
Refactor object-view to use 9-cell table
Different list styles - graphics (side arrow, x-axis, y-axis)
Save button
Multiple inheritance
Refactor background-image to background image, p-incremental to incremental p, etc.
Replace internal 'class=incremental' with 'class=_incremental'
Different list styles - grid (nw ne se sw)
Different list styles - flash
Different slide styles - background (color)
Additional objects in slide - before after left right
Show random slide (press 'r' or send message 'RANDOM')
Bug: going back to incremental step 0 shows all rather than hiding all
Replace internal 'class=x' with 'class=_x' (loaded, view)
Slide count
Rich content - iframe (eg google maps)
Increase resolution to 1600x1200
'New' button
Press 'e' or 'escape' for edit box -- just view source for now
Make it work in firefox (mostly -- need to hit escape before anything will work)
Replace data url save with blob url
Bug: utf-8 chars don't survive "save"
Bug: following save button (not saving it) yields broken presentation
Edit text on client and save locally
Edit window scrolls to current slide automatically
Show in edit window which slides are unrolled
If leave edit window on an unrolled slide, jump to that slide
---
Ipad swipe works for left and right only, should also support up and down
Bug: left and right arrows should work in text areas without screwing the whole page
Bug: last slide missing "after" although script tries to add it
Add slide on client by pressing enter
Remove slide on client by removing all content
Up and down arrows in edit window work like tab/shift-tab
Edit type of slides on client (emergency edits only -- ie enter type name manually)
Reinstate transition
Work out how to do child-properties neatly (item colour, bar height, etc.) Unrolling grandchildren seems nicest but is it tedious?
Server can inline *everything* (images, objects) for completely stand-alone presentation
Allow slides to have multiple parents: if a slide has already been unrolled somewhere else, link but do not unroll again
Allow hash-urls to be slide keys, not just ids
Navigation uses key by preference
Rich content - video:
Documentation!
Child reordering
Different list styles - multi-generation - org chart
Different list styles - multi-generation - mind map
<<< 3.0
Export presentation to PDF (is this useful?)
Edit on client and submit to server
Hash-urls to subslides (need to change URL syntax to do this as don't know what has been unrolled---bookmarkable, but maybe confusing?)
Client can save itself locally and submit later
